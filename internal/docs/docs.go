// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Subscriptions API"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/subscriptions": {
            "get": {
                "description": "Список подписок с фильтрами и пагинацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "List subscriptions",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"b548150d-6198-4cc1-a186-8c4a1e0ccdcf\"",
                        "description": "Filter by user UUID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"Test Service\"",
                        "example": "\"Test Service\"",
                        "description": "Filter by service name",
                        "name": "service_name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "example": 20,
                        "description": "Page size (default 20, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "example": 0,
                        "description": "Offset (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SubscriptionResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Создаёт запись о подписке",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Create subscription",
                "parameters": [
                    {
                        "description": "Subscription body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/subscriptions/total": {
            "get": {
                "description": "Суммарная стоимость подписок за период [from; to] в месяцах. Формат дат: MM-YYYY.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Total cost for a period",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"07-2025\"",
                        "description": "From month (MM-YYYY)",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"09-2025\"",
                        "description": "To month (MM-YYYY)",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "\"60601fee-2bf1-4721-ae6f-7636e79a0cba\"",
                        "description": "Filter by user UUID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"Yandex Plus\"",
                        "description": "Filter by service name",
                        "name": "service_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TotalCostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/subscriptions/{id}": {
            "get": {
                "description": "Возвращает запись по её ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Get subscription by id",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"b548150d-6198-4cc1-a186-8c4a1e0ccdcf\"",
                        "description": "Subscription ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет подписку по её ID",
                "tags": [
                    "subscriptions"
                ],
                "summary": "Delete subscription by id",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"b548150d-6198-4cc1-a186-8c4a1e0ccdcf\"",
                        "description": "Subscription ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Частичное обновление полей подписки. Чтобы очистить end_date, передайте \"\".",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Patch subscription",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "\"b548150d-6198-4cc1-a186-8c4a1e0ccdcf\"",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateSubscriptionRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "09-2025"
                },
                "price": {
                    "type": "integer",
                    "example": 500
                },
                "service_name": {
                    "type": "string",
                    "example": "Test Service"
                },
                "start_date": {
                    "type": "string",
                    "example": "07-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba"
                }
            }
        },
        "models.SubscriptionResponse": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "09-2025"
                },
                "id": {
                    "type": "string",
                    "example": "b548150d-6198-4cc1-a186-8c4a1e0ccdcf"
                },
                "price": {
                    "type": "integer",
                    "example": 500
                },
                "service_name": {
                    "type": "string",
                    "example": "Test Service"
                },
                "start_date": {
                    "type": "string",
                    "example": "07-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba"
                }
            }
        },
        "models.TotalCostResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.UpdateSubscriptionRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "description": "\"\" — очистить конец",
                    "type": "string",
                    "example": ""
                },
                "price": {
                    "type": "integer",
                    "example": 450
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex Plus"
                },
                "start_date": {
                    "type": "string",
                    "example": "08-2025"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Subscriptions API (Swagger)",
	Description:      "REST-сервис для управления онлайн-подписками пользователей.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
